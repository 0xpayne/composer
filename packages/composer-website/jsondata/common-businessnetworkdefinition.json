{"name":"BusinessNetworkDefinition","commentData":{"description":"A BusinessNetworkDefinition defines a set of Participants that exchange Assets by\nsending Transactions. This class manages the metadata and domain-specific types for\nthe network as well as a set of executable scripts.\n\nApplications should\nretrieve instances from {@link BusinessNetworkDefinition#fromArchive}","tags":[{"title":"summary","description":"A BusinessNetworkDefinition defines a set of Participants that exchange Assets by\nsending Transactions."},{"title":"class","description":null,"type":null,"name":null},{"title":"memberof","description":"module:composer-common"}]},"methods":[{"visibility":"+","returnType":"String","name":"getIdentifier","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Returns the identifier for this business network\nThe identifier is formed from a business network name + '@' + version. The\nversion is a semver valid version string. It is not used by Hyperledger Composer\nand is not needed in any other API. It is for application developer information purposes onlyu","tags":[{"title":"return","description":"the identifier of this business network","type":{"type":"NameExpression","name":"String"}}]},"description":["Returns the identifier for this business network The identifier is formed from a business network name + '@' + version. The version is a semver valid version string. It is not used by Hyperledger Composer and is not needed in any other API. It is for application developer information purposes onlyu"],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["the identifier of this business network"],"type":"String"},"summary":"Returns the identifier for this business network The identifier is formed from a business network name + '@' + version"},{"visibility":"+","returnType":"BusinessNetworkMetadata","name":"getMetadata","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Returns the metadata for this business network","tags":[{"title":"return","description":"the metadata for this business network","type":{"type":"NameExpression","name":"BusinessNetworkMetadata"}}]},"description":["Returns the metadata for this business network"],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["the metadata for this business network"],"type":"BusinessNetworkMetadata","fqntype":"common-BusinessNetworkMetadata"}},{"visibility":"+","returnType":"String","name":"getName","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Returns the name for this business network","tags":[{"title":"return","description":"the name of this business network","type":{"type":"NameExpression","name":"String"}}]},"description":["Returns the name for this business network"],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["the name of this business network"],"type":"String"}},{"visibility":"+","returnType":"String","name":"getVersion","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Returns the version for this business network","tags":[{"title":"return","description":"the version of this business network. Use semver module\nto parse.","type":{"type":"NameExpression","name":"String"}}]},"description":["Returns the version for this business network"],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["the version of this business network. Use semver module to parse."],"type":"String"}},{"visibility":"+","returnType":"String","name":"getDescription","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Returns the description for this business network","tags":[{"title":"return","description":"the description of this business network","type":{"type":"NameExpression","name":"String"}}]},"description":["Returns the description for this business network"],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["the description of this business network"],"type":"String"}},{"visibility":"+","returnType":"Promise","name":"fromArchive","methodArgs":["Buffer"],"decorators":["param","return"],"throws":"","example":"","commentData":{"description":"Create a BusinessNetworkDefinition from an archive.","tags":[{"title":"param","description":"the Buffer to a zip archive","type":{"type":"NameExpression","name":"Buffer"},"name":"Buffer"},{"title":"return","description":"a Promise to the instantiated business network","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Create a BusinessNetworkDefinition from an archive."],"parameters":[{"description":"the Buffer to a zip archive","type":"Buffer","name":"Buffer","optional":false}],"suboptions":[],"seeAlso":[],"return":{"description":["a Promise to the instantiated business network"],"type":"Promise"},"summary":"Create a BusinessNetworkDefinition from an archive"},{"visibility":"+","returnType":"Buffer","name":"toArchive","methodArgs":["Object"],"decorators":["param","return"],"throws":"","example":"","commentData":{"description":"Store a BusinessNetworkDefinition as an archive.","tags":[{"title":"param","description":"JSZip options","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Object"}},"name":"options"},{"title":"return","description":"buffer  - the zlib buffer","type":{"type":"NameExpression","name":"Buffer"}}]},"description":["Store a BusinessNetworkDefinition as an archive."],"parameters":[{"description":"JSZip options","type":"Object","name":"options","optional":true}],"suboptions":[],"seeAlso":[],"return":{"description":["buffer  - the zlib buffer"],"type":"Buffer"},"summary":"Store a BusinessNetworkDefinition as an archive"},{"visibility":"+","returnType":"Promise","name":"fromDirectory","methodArgs":["String","Object","Object","boolean","boolean"],"decorators":["summary","param","param","param","param","param","return"],"throws":"","example":"","commentData":{"description":"Builds a BusinessNetworkDefintion from the contents of a directory.\nThe directory must include a package.json in the root (used to specify\nthe name, version and description of the business network). This method\nis designed to work with business networks that refer to external models\nusing npm dependencies as well as business networks that statically\npackage their model files.\n<p>\nIf package.json contains a dependencies property then this method will search for\nmodel (CTO) files under the node_modules directory for each dependency that\npasses the options.dependencyGlob pattern.\n</p>\n<p>\nIf the network depends on an npm module its dependencies (transitive closure)\nwill also be scanned for model (CTO) files.\n</p>\n<p>\nThe directory may optionally contain a README.md file which is accessible from the\nBusinessNetworkMetadata.getREADME method.\n</p>\n<p>\nIn addition all model files will be added that are not under node_modules\nand that pass the options.modelFileGlob pattern. By default you should put\nmodel files under a directory called 'models'.\n</p>\n<p>\nAll script (js) files will be added that are not under node_modules and\nthat pass the options.scriptGlob pattern. By default you should put Javascript\nfiles under the 'lib' directory.\n</p>","tags":[{"title":"summary","description":"Builds a BusinessNetworkDefintion from the contents of a directory."},{"title":"param","description":"to a local directory","type":{"type":"NameExpression","name":"String"},"name":"path"},{"title":"param","description":"an optional set of options to configure the instance.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Object"}},"name":"options"},{"title":"param","description":"specify the glob pattern used to match\nthe npm dependencies to process. Defaults to **","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Object"}},"name":"options.dependencyGlob"},{"title":"param","description":"specify the glob pattern used to match\nthe model files to include. Defaults to **\\/models/**\\/*.cto","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"boolean"}},"name":"options.modelFileGlob"},{"title":"param","description":"specify the glob pattern used to match\nthe script files to include. Defaults to **\\/lib/**\\/*.js","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"boolean"}},"name":"options.scriptGlob"},{"title":"return","description":"a Promise to the instantiated business network","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Builds a BusinessNetworkDefintion from the contents of a directory. The directory must include a package.json in the root (used to specify the name, version and description of the business network). This method is designed to work with business networks that refer to external models using npm dependencies as well as business networks that statically package their model files. <p> If package.json contains a dependencies property then this method will search for model (CTO) files under the node_modules directory for each dependency that passes the options.dependencyGlob pattern. </p> <p> If the network depends on an npm module its dependencies (transitive closure) will also be scanned for model (CTO) files. </p> <p> The directory may optionally contain a README.md file which is accessible from the BusinessNetworkMetadata.getREADME method. </p> <p> In addition all model files will be added that are not under node_modules and that pass the options.modelFileGlob pattern. By default you should put model files under a directory called 'models'. </p> <p> All script (js) files will be added that are not under node_modules and that pass the options.scriptGlob pattern. By default you should put Javascript files under the 'lib' directory. </p>"],"parameters":[{"description":"to a local directory","type":"String","name":"path","optional":false},{"description":"an optional set of options to configure the instance.","type":"Object","name":"options","optional":true}],"suboptions":[{"description":"specify the glob pattern used to match the npm dependencies to process. Defaults to **","type":"Object","name":"options.dependencyGlob","optional":true},{"description":"specify the glob pattern used to match the model files to include. Defaults to **\\/models/**\\/*.cto","type":"boolean","name":"options.modelFileGlob","optional":true},{"description":"specify the glob pattern used to match the script files to include. Defaults to **\\/lib/**\\/*.js","type":"boolean","name":"options.scriptGlob","optional":true}],"seeAlso":[],"summary":"Builds a BusinessNetworkDefintion from the contents of a directory.","return":{"description":["a Promise to the instantiated business network"],"type":"Promise"}},{"visibility":"+","returnType":"Introspector","name":"getIntrospector","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Provides access to the Introspector for this business network. The Introspector\nis used to reflect on the types defined within this business network.","tags":[{"title":"return","description":"the Introspector for this business network","type":{"type":"NameExpression","name":"Introspector"}}]},"description":["Provides access to the Introspector for this business network. The Introspector is used to reflect on the types defined within this business network."],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["the Introspector for this business network"],"type":"Introspector","fqntype":"common-Introspector"},"summary":"Provides access to the Introspector for this business network"},{"visibility":"+","returnType":"Factory","name":"getFactory","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Provides access to the Factory for this business network. The Factory\nis used to create the types defined in this business network.","tags":[{"title":"return","description":"the Factory for this business network","type":{"type":"NameExpression","name":"Factory"}}]},"description":["Provides access to the Factory for this business network. The Factory is used to create the types defined in this business network."],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["the Factory for this business network"],"type":"Factory","fqntype":"runtime-Factory"},"summary":"Provides access to the Factory for this business network"},{"visibility":"+","returnType":"Serializer","name":"getSerializer","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Provides access to the Serializer for this business network. The Serializer\nis used to serialize instances of the types defined within this business network.","tags":[{"title":"return","description":"the Serializer for this business network","type":{"type":"NameExpression","name":"Serializer"}}]},"description":["Provides access to the Serializer for this business network. The Serializer is used to serialize instances of the types defined within this business network."],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["the Serializer for this business network"],"type":"Serializer","fqntype":"runtime-Serializer"},"summary":"Provides access to the Serializer for this business network"}],"description":["A BusinessNetworkDefinition defines a set of Participants that exchange Assets by sending Transactions. This class manages the metadata and domain-specific types for the network as well as a set of executable scripts.","Applications should retrieve instances from {@link BusinessNetworkDefinition#fromArchive}"],"seeAlso":[],"visibility":"public","module":"common","summary":"A BusinessNetworkDefinition defines a set of Participants that exchange Assets by sending Transactions"}