{"name":"IdCard","commentData":{"description":"Business Network Card. Encapsulates credentials and other information required to connect to a specific business network\nas a specific user.\n\nInstances of this class can be created using IdCard.fromArchive or IdCard.fromDirectory, as well as the constructor.","tags":[{"title":"summary","description":"Business Network Card to connect to a business network"},{"title":"class","description":null,"type":null,"name":null},{"title":"memberof","description":"module:composer-common"}]},"methods":[{"visibility":"+","returnType":"void","name":"constructor","methodArgs":["Object","Object"],"decorators":["param","param"],"throws":"","example":"","commentData":{"description":"Create the IdCard.","tags":[{"title":"param","description":"metadata associated with the card.","type":{"type":"NameExpression","name":"Object"},"name":"metadata"},{"title":"param","description":"connection profile associated with the card.","type":{"type":"NameExpression","name":"Object"},"name":"connectionProfile"}]},"description":["Create the IdCard."],"parameters":[{"description":"metadata associated with the card.","type":"Object","name":"metadata","optional":false},{"description":"connection profile associated with the card.","type":"Object","name":"connectionProfile","optional":false}],"suboptions":[],"seeAlso":[],"summary":"Create the IdCard"},{"visibility":"+","returnType":"String","name":"getUserName","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Name of the user identity associated with the card. This should be unique within the scope of a given\nbusiness network and connection profile.\n\nThis is a mandatory field.","tags":[{"title":"return","description":"Name of the user identity.","type":{"type":"NameExpression","name":"String"}}]},"description":["Name of the user identity associated with the card. This should be unique within the scope of a given business network and connection profile.","This is a mandatory field."],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["Name of the user identity."],"type":"String"},"summary":"Name of the user identity associated with the card"},{"visibility":"+","returnType":"String","name":"getDescription","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Free text description of the card.","tags":[{"title":"return","description":"card description.","type":{"type":"NameExpression","name":"String"}}]},"description":["Free text description of the card."],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["card description."],"type":"String"},"summary":"Free text description of the card"},{"visibility":"+","returnType":"String","name":"getBusinessNetworkName","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Name of the business network to which the ID card applies. Generally this will be present but may be\nomitted for system cards.","tags":[{"title":"return","description":"business network name.","type":{"type":"NameExpression","name":"String"}}]},"description":["Name of the business network to which the ID card applies. Generally this will be present but may be omitted for system cards."],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["business network name."],"type":"String"},"summary":"Name of the business network to which the ID card applies"},{"visibility":"+","returnType":"Object","name":"getConnectionProfile","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Connection profile for this card.\n\nThis is a mandatory field.","tags":[{"title":"return","description":"connection profile.","type":{"type":"NameExpression","name":"Object"}}]},"description":["Connection profile for this card.","This is a mandatory field."],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["connection profile."],"type":"Object"},"summary":"Connection profile for this card"},{"visibility":"+","returnType":"Object","name":"getCredentials","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Credentials associated with this card, and which are used to connect to the associated business network.\n<p>\nFor PKI-based authentication, the credentials are expected to be of the form:\n<em>{ certificate: String, privateKey: String }</em>.","tags":[{"title":"return","description":"credentials.","type":{"type":"NameExpression","name":"Object"}}]},"description":["Credentials associated with this card, and which are used to connect to the associated business network. <p> For PKI-based authentication, the credentials are expected to be of the form: <em>{ certificate: String, privateKey: String }</em>."],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["credentials."],"type":"Object"},"summary":"Credentials associated with this card, and which are used to connect to the associated business network"},{"visibility":"+","returnType":"void","name":"setCredentials","methodArgs":["Object"],"decorators":["param"],"throws":"","example":"","commentData":{"description":"Credentials to associate with this card.\n<p>\nFor PKI-based authentication, the credentials are expected to be of the form:\n<em>{ certificate: String, privateKey: String }</em>.","tags":[{"title":"param","description":"credentials.","type":{"type":"NameExpression","name":"Object"},"name":"credentials"}]},"description":["Credentials to associate with this card. <p> For PKI-based authentication, the credentials are expected to be of the form: <em>{ certificate: String, privateKey: String }</em>."],"parameters":[{"description":"credentials.","type":"Object","name":"credentials","optional":false}],"suboptions":[],"seeAlso":[],"summary":"Credentials to associate with this card"},{"visibility":"+","returnType":"Object","name":"getEnrollmentCredentials","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Enrollment credentials. If there are no credentials associated with this card, these credentials  are used to\nenroll with a business network and obtain certificates.\n<p>\nFor an ID/secret enrollment scheme, the credentials are expected to be of the form:\n<em>{ secret: String }</em>.","tags":[{"title":"return","description":"enrollment credentials, or null if none exist.","type":{"type":"NameExpression","name":"Object"}}]},"description":["Enrollment credentials. If there are no credentials associated with this card, these credentials  are used to enroll with a business network and obtain certificates. <p> For an ID/secret enrollment scheme, the credentials are expected to be of the form: <em>{ secret: String }</em>."],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["enrollment credentials, or null if none exist."],"type":"Object"},"summary":"Enrollment credentials"},{"visibility":"+","returnType":"String[]","name":"getRoles","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Special roles for which this ID can be used, which can include:\n<ul>\n  <li>PeerAdmin</li>\n  <li>ChannelAdmin</li>\n  <li>Issuer</li>\n</ul>","tags":[{"title":"return","description":"roles.","type":{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Array"},"applications":[{"type":"NameExpression","name":"String"}]}}]},"description":["Special roles for which this ID can be used, which can include: <ul>   <li>PeerAdmin</li>   <li>ChannelAdmin</li>   <li>Issuer</li> </ul>"],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["roles."],"type":"String[]"}},{"visibility":"+","returnType":"Promise","name":"fromArchive","methodArgs":[],"decorators":["param","return"],"throws":"","example":"","commentData":{"description":"Create an IdCard from a card archive.\n<p>\nValid types for <em>zipData</em> are any of the types supported by JSZip.","tags":[{"title":"param","description":"card archive data.","type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"String"},{"type":"NameExpression","name":"ArrayBuffer"},{"type":"NameExpression","name":"Uint8Array"},{"type":"NameExpression","name":"Buffer"},{"type":"NameExpression","name":"Blob"},{"type":"NameExpression","name":"Promise"}]},"name":"zipData"},{"title":"return","description":"Promise to the instantiated IdCard.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Create an IdCard from a card archive. <p> Valid types for <em>zipData</em> are any of the types supported by JSZip."],"parameters":[{"description":"card archive data.","name":"zipData","type":"String; ArrayBuffer; Uint8Array; Buffer; Blob; Promise","optional":false}],"suboptions":[],"seeAlso":[],"return":{"description":["Promise to the instantiated IdCard."],"type":"Promise"},"summary":"Create an IdCard from a card archive"},{"visibility":"+","returnType":"Promise","name":"toArchive","methodArgs":["Object","String"],"decorators":["param","param","return"],"throws":"","example":"","commentData":{"description":"Generate a card archive representing this ID card.\n<p>\nThe default value for the <em>options.type</em> parameter is <em>arraybuffer</em>. See JSZip documentation\nfor other valid values.","tags":[{"title":"param","description":"JSZip generation options.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Object"}},"name":"options"},{"title":"param","description":"type of the resulting ZIP file data.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"String"}},"name":"options.type"},{"title":"return","description":"Promise of the generated ZIP file; by default an ArrayBuffer.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Generate a card archive representing this ID card. <p> The default value for the <em>options.type</em> parameter is <em>arraybuffer</em>. See JSZip documentation for other valid values."],"parameters":[{"description":"JSZip generation options.","type":"Object","name":"options","optional":true}],"suboptions":[{"description":"type of the resulting ZIP file data.","type":"String","name":"options.type","optional":true}],"seeAlso":[],"return":{"description":["Promise of the generated ZIP file; by default an ArrayBuffer."],"type":"Promise"},"summary":"Generate a card archive representing this ID card"},{"visibility":"+","returnType":"Promise","name":"fromDirectory","methodArgs":["String",null],"decorators":["param","param","return"],"throws":"","example":"","commentData":{"description":"Create an IdCard from a directory consisting of the content of an ID card.","tags":[{"title":"param","description":"directory containing card data.","type":{"type":"NameExpression","name":"String"},"name":"cardDirectory"},{"title":"param","description":"Node file system API implementation to use for reading card data.\nDefaults to the Node implementation.","type":{"type":"OptionalType","expression":{"type":"AllLiteral"}},"name":"fs"},{"title":"return","description":"Promise that resolves to an IdCard.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Create an IdCard from a directory consisting of the content of an ID card."],"parameters":[{"description":"directory containing card data.","type":"String","name":"cardDirectory","optional":false},{"description":"Node file system API implementation to use for reading card data. Defaults to the Node implementation.","name":"fs","optional":true}],"suboptions":[],"seeAlso":[],"return":{"description":["Promise that resolves to an IdCard."],"type":"Promise"},"summary":"Create an IdCard from a directory consisting of the content of an ID card"},{"visibility":"+","returnType":"Promise","name":"toDirectory","methodArgs":["String",null],"decorators":["param","param","return"],"throws":"","example":"","commentData":{"description":"Save the content of an IdCard a directory.","tags":[{"title":"param","description":"directory to save card data.","type":{"type":"NameExpression","name":"String"},"name":"cardDirectory"},{"title":"param","description":"Node file system API implementation to use for writing card data.\nDefaults to the Node implementation.","type":{"type":"OptionalType","expression":{"type":"AllLiteral"}},"name":"fs"},{"title":"return","description":"Promise that resolves then the save is complete.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Save the content of an IdCard a directory."],"parameters":[{"description":"directory to save card data.","type":"String","name":"cardDirectory","optional":false},{"description":"Node file system API implementation to use for writing card data. Defaults to the Node implementation.","name":"fs","optional":true}],"suboptions":[],"seeAlso":[],"return":{"description":["Promise that resolves then the save is complete."],"type":"Promise"},"summary":"Save the content of an IdCard a directory"}],"description":["Business Network Card. Encapsulates credentials and other information required to connect to a specific business network as a specific user.","Instances of this class can be created using IdCard.fromArchive or IdCard.fromDirectory, as well as the constructor."],"seeAlso":[],"visibility":"public","module":"common","summary":"Business Network Card"}