{"name":"ValidatedConcept","commentData":{"description":"Resource is an instance that has a type. The type of the resource\nspecifies a set of properites (which themselves have types).\n\n\nType information in Composer is used to validate the structure of\nResource instances and for serialization.\n\n\nResources are used in Composer to represent Assets, Participants, Transactions and\nother domain classes that can be serialized for long-term persistent storage.","tags":[{"title":"extends","description":null,"type":null,"name":"Concept"},{"title":"see","description":"See {@link Resource}"},{"title":"class","description":null,"type":null,"name":null},{"title":"memberof","description":"module:composer-common"}]},"methods":[{"visibility":"+","returnType":"void","name":"setPropertyValue","methodArgs":["string","string"],"decorators":["param","param","throws"],"throws":"Error","example":"","commentData":{"description":"Sets a property, validating that it does not violate the model","tags":[{"title":"param","description":"the name of the field","type":{"type":"NameExpression","name":"string"},"name":"propName"},{"title":"param","description":"the value of the property","type":{"type":"NameExpression","name":"string"},"name":"value"},{"title":"throws","description":"if the value is not compatible with the model definition for the field","type":{"type":"NameExpression","name":"Error"}}]},"description":["Sets a property, validating that it does not violate the model"],"parameters":[{"description":"the name of the field","type":"string","name":"propName","optional":false},{"description":"the value of the property","type":"string","name":"value","optional":false}],"suboptions":[],"seeAlso":[]},{"visibility":"+","returnType":"void","name":"addArrayValue","methodArgs":["string","string"],"decorators":["param","param","throws"],"throws":"Error","example":"","commentData":{"description":"Adds an array property value, validating that it does not violate the model","tags":[{"title":"param","description":"the name of the field","type":{"type":"NameExpression","name":"string"},"name":"propName"},{"title":"param","description":"the value of the property","type":{"type":"NameExpression","name":"string"},"name":"value"},{"title":"throws","description":"if the value is not compatible with the model definition for the field","type":{"type":"NameExpression","name":"Error"}}]},"description":["Adds an array property value, validating that it does not violate the model"],"parameters":[{"description":"the name of the field","type":"string","name":"propName","optional":false},{"description":"the value of the property","type":"string","name":"value","optional":false}],"suboptions":[],"seeAlso":[]},{"visibility":"+","returnType":"void","name":"validate","methodArgs":[],"decorators":["throws"],"throws":"Error","example":"","commentData":{"description":"Validates the instance against its model.","tags":[{"title":"throws","description":"if the instance if invalid with respect to the model","type":{"type":"NameExpression","name":"Error"}}]},"description":["Validates the instance against its model."],"parameters":[],"suboptions":[],"seeAlso":[],"summary":"Validates the instance against its model"}],"superClass":"Concept","description":["Resource is an instance that has a type. The type of the resource specifies a set of properites (which themselves have types).","Type information in Composer is used to validate the structure of Resource instances and for serialization.","Resources are used in Composer to represent Assets, Participants, Transactions and other domain classes that can be serialized for long-term persistent storage."],"seeAlso":["See {@link Resource}"],"visibility":"public","extends":"Concept","module":"common","summary":"Resource is an instance that has a type","superMethods":[{"fromClass":"Concept","method":{"visibility":"+","returnType":"boolean","name":"isConcept","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Determine if this typed is a concept.","tags":[{"title":"return","description":"True if this typed is a concept,\nfalse if not.","type":{"type":"NameExpression","name":"boolean"}}]},"description":["Determine if this typed is a concept."],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["True if this typed is a concept, false if not."],"type":"boolean"},"summary":"Determine if this typed is a concept"}},{"fromClass":"Typed","method":{"visibility":"+","returnType":"string","name":"getType","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Get the type of the instance (a short name, not including namespace).","tags":[{"title":"return","description":"The type of this object","type":{"type":"NameExpression","name":"string"}}]},"description":["Get the type of the instance (a short name, not including namespace)."],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["The type of this object"],"type":"string"},"summary":"Get the type of the instance (a short name, not including namespace)"}},{"fromClass":"Typed","method":{"visibility":"+","returnType":"string","name":"getFullyQualifiedType","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Get the fully-qualified type name of the instance (including namespace).","tags":[{"title":"return","description":"The fully-qualified type name of this object","type":{"type":"NameExpression","name":"string"}}]},"description":["Get the fully-qualified type name of the instance (including namespace)."],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["The fully-qualified type name of this object"],"type":"string"},"summary":"Get the fully-qualified type name of the instance (including namespace)"}},{"fromClass":"Typed","method":{"visibility":"+","returnType":"string","name":"getNamespace","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Get the namespace of the instance.","tags":[{"title":"return","description":"The namespace of this object","type":{"type":"NameExpression","name":"string"}}]},"description":["Get the namespace of the instance."],"parameters":[],"suboptions":[],"seeAlso":[],"return":{"description":["The namespace of this object"],"type":"string"},"summary":"Get the namespace of the instance"}},{"fromClass":"Typed","method":{"visibility":"+","returnType":"boolean","name":"instanceOf","methodArgs":["String"],"decorators":["param","returns"],"throws":"","example":"","commentData":{"description":"Check to see if this instance is an instance of the specified fully qualified\ntype name.","tags":[{"title":"param","description":"The fully qualified type name.","type":{"type":"NameExpression","name":"String"},"name":"fqt"},{"title":"returns","description":"True if this instance is an instance of the specified fully\nqualified type name, false otherwise.","type":{"type":"NameExpression","name":"boolean"}}]},"description":["Check to see if this instance is an instance of the specified fully qualified type name."],"parameters":[{"description":"The fully qualified type name.","type":"String","name":"fqt","optional":false}],"suboptions":[],"seeAlso":[],"return":{"description":["True if this instance is an instance of the specified fully qualified type name, false otherwise."],"type":"boolean"},"summary":"Check to see if this instance is an instance of the specified fully qualified type name"}}]}